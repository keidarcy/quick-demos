{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["initState","text","size","bgColor","fontColor","position","image","reduer","state","action","newState","field","value","localStorage","setItem","JSON","stringify","App","useReducer","getItem","parse","dispatch","bgColors","fontColors","className","style","width","type","onChange","e","target","htmlFor","map","c","height","onClick","index","s","p","i","src","alt","minWidth","fontFamily","String","replace","all","fromCharCode","charCodeAt","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.79688b0c.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nconst initState = {\n  text: '',\n  size: 'h1',\n  bgColor: 'bg-light',\n  fontColor: 'text-dark',\n  position: '',\n  image: ''\n};\n\ntype ActionType = { field: string; value: string };\n\nconst reduer = (state: typeof initState, action: ActionType) => {\n  const newState = { ...state, [action.field]: action.value };\n  localStorage.setItem('SHOWCASES', JSON.stringify(newState));\n  return newState;\n};\n\nfunction App() {\n  const [state, dispatch] = useReducer(\n    reduer,\n    localStorage.getItem('SHOWCASES')\n      ? JSON.parse(localStorage.getItem('SHOWCASES') as string)\n      : initState\n  );\n  const bgColors = [\n    'bg-primary',\n    'bg-secondary',\n    'bg-success',\n    'bg-danger',\n    'bg-warning',\n    'bg-info',\n    'bg-light',\n    'bg-dark'\n  ];\n  const fontColors = [\n    'text-primary',\n    'text-secondary',\n    'text-success',\n    'text-danger',\n    'text-warning',\n    'text-info',\n    'text-light',\n    'text-dark'\n  ];\n\n  const sizes = ['h1', 'h2', 'h3', 'h4', 'h5'];\n\n  const postions = ['flex-row', 'flex-row-reverse', 'flex-column', 'flex-column-reverse'];\n\n  const images = [\n    'https://lh6.googleusercontent.com/CmLF2OtWLmvHxxbpfbByAWha60zQuBta_jnYq0VN2e7VNfkoYN0RO2ua3hjFKKBfdP1-C-UdgE36OHpB2DX9bcvO_X8SUEdZVY0VTAvP0eU66RD3CN0mo6h48jsdtd2MdRM0C35euYc',\n    'https://lh4.googleusercontent.com/8Ypdpv7qkZmFeKTMneRC1y3jdvMriv-9jLVcTD5RmXwu9abJrL7j8mQPZhI9gfje8IchKonzzWRAqxq75eMFxIkDCjtopGmkFxI902Y9aPu--qnNBW1BtWSefvjnp_1MkufGQyUxWPo',\n    'https://lh6.googleusercontent.com/hu8GQaI2h69LPnOfnfwhIXteNpomSTnRA5WYVRo914EX5DjQegPPl7GnidN08TEWqWhBAohrGCdIQy7eSG5pNbio2cDSQJyycnPlYWp6avPAKwXv3-fgz_JI77gj4YsPhhAOCqdw3sQ',\n    'https://lh4.googleusercontent.com/3tc0pvYNOhkGnO7ZPt029CWjAsByEU74tRcP27-LxaWicT-L-3SugaPBCyOEdBFMcR8ki7JKvdaxx15KC2Q87skZTQEYdo3emLckS2KI6_2OL3tNvwzDe8fTM9356Y8wneeX_OtJFnw',\n    'https://lh3.googleusercontent.com/mSKDKszuD_mgkxnhUjjPVA8inNFphytqOxa98pu4Od5sA3bnPVrcTr0EOIizt5mwpwYVixnV8997utBA7SgwNJmLIYv-Yk_kMsInpIIv93mvWvD6BBPe48sKcTmssqmwTZGduRvMLEk'\n  ];\n\n  const toFullWidth = (value: string) => {\n    if (!value) return value;\n    return String(value).replace(/[!-~]/g, function (all) {\n      return String.fromCharCode(all.charCodeAt(0) + 0xfee0);\n    });\n  };\n\n  return (\n    <>\n      <div className=\"my-5\">\n        <div className=\"mx-auto\" style={{ width: '30rem' }}>\n          <div className=\"form-group\">\n            <input\n              type=\"text\"\n              className=\"form-control\"\n              value={state.text}\n              onChange={(e) => dispatch({ field: 'text', value: e.target.value })}\n            />\n          </div>\n          <label htmlFor=\"background color\">Background Color</label>\n          <div className=\"d-flex p-2 bd-highlight\">\n            {bgColors.map((c) => (\n              <div\n                key={c}\n                className={`card ${c} mx-1`}\n                style={{ width: '1rem', height: '1rem' }}\n                onClick={(e) => dispatch({ field: 'bgColor', value: c })}\n              ></div>\n            ))}\n          </div>\n          <label htmlFor=\"font color\">Font Color</label>\n          <div className=\"d-flex p-2 bd-highlight\">\n            {bgColors.map((c, index) => (\n              <div\n                key={c}\n                className={`card ${c} mx-1`}\n                style={{ width: '1rem', height: '1rem' }}\n                onClick={() => dispatch({ field: 'fontColor', value: fontColors[index] })}\n              ></div>\n            ))}\n          </div>\n          <label htmlFor=\"font size\">Font Size</label>\n          <div className=\"d-flex p-2 bd-highlight\">\n            {sizes.map((s) => (\n              <div\n                key={s}\n                className={`card mx-1`}\n                style={{ width: '2rem', height: '2rem' }}\n                onClick={() => dispatch({ field: 'size', value: s })}\n              >\n                {s}\n              </div>\n            ))}\n          </div>\n          <label htmlFor=\"position\">Position</label>\n          <div className=\"d-flex p-2 bd-highlight\">\n            {postions.map((p) => (\n              <div\n                key={p}\n                className=\"mx-1 border border-secondary rounded\"\n                onClick={() => dispatch({ field: 'position', value: p })}\n              >\n                {p}\n              </div>\n            ))}\n          </div>\n          <label htmlFor=\"image\">Image</label>\n          <div className=\"d-flex p-2 bd-highlight\">\n            {images.map((i) => (\n              <img\n                src={i}\n                key={i}\n                alt={i}\n                className=\"mx-1 rounded-sm\"\n                width=\"200px\"\n                onClick={() => dispatch({ field: 'image', value: i })}\n              />\n            ))}\n          </div>\n          <div\n            className={`container card ${state.bgColor} mb-3 ${state.fontColor}`}\n            style={{ minWidth: '40rem' }}\n          >\n            <div className={`d-flex card-body ${state.size} ${state.position}`}>\n              <p\n                className=\"card-text font-weight-bold\"\n                style={{ fontFamily: \"'Pinyon Script', cursive\" }}\n              >\n                {toFullWidth(state.text)}\n              </p>\n              <p\n                className=\"card-text font-weight-bold\"\n                style={{ fontFamily: \"'Pinyon Script', cursive\" }}\n              >\n                {state.text}\n              </p>\n              <p\n                className=\"card-text\"\n                style={{ fontFamily: \"'Noto Sans JP', sans-serif\" }}\n              >\n                {state.text}\n              </p>\n              {state.image ? <img src={state.image} alt=\"penggin\" width=\"100px\" /> : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}