{"version":3,"sources":["screens/ShopifyMultipass.tsx","components/ScreenWrapper.tsx","screens/EmbroideryPreview.tsx","screens/Menu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ACTION_TYPES","ScreenWrapper","id","color","children","className","initState","text","size","bgColor","fontColor","position","image","reduer","state","action","newState","field","value","localStorage","setItem","JSON","stringify","EmbroideryPreview","useReducer","getItem","parse","dispatch","bgColors","fontColors","type","onChange","e","target","htmlFor","map","c","style","width","height","onClick","index","s","p","i","src","alt","minWidth","fontFamily","String","replace","all","fromCharCode","charCodeAt","initialState","domain","key","redirect","data","email","tag_string","first_name","last_name","addresses","address1","city","country","phone","province","zip","province_code","country_code","default","undefined","url","reducer","CHANGE","payload","SUBMIT","Multipass","withCustomerData","withDomain","withRedirect","alert","t","secret","customer","button","doc","ShopifyMultipass","useState","URLSearchParams","window","location","search","get","isJa","setIsJa","role","aria-label","href","rel","rows","preventDefault","Menu","screens","screen","lineString","split","str","charAt","toUpperCase","slice","join","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uKAIKA,E,8ECGQC,EAA8C,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,GAAIC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACvE,OACE,qBAAKF,GAAIA,EAAIG,UAAS,UAAKF,EAAL,aAAtB,SACE,qBAAKE,UAAU,sBAAf,SAAsCD,OCPtCE,EAAY,CAChBC,KAAM,GACNC,KAAM,KACNC,QAAS,WACTC,UAAW,YACXC,SAAU,GACVC,MAAO,IAKHC,EAAS,SAACC,EAAyBC,GACvC,IAAMC,EAAQ,2BAAQF,GAAR,kBAAgBC,EAAOE,MAAQF,EAAOG,QAEpD,OADAC,aAAaC,QAAQ,YAAaC,KAAKC,UAAUN,IAC1CA,GAOIO,EAAsD,SAAC,GAAY,IAwCzDL,EAxC+ChB,EAAS,EAATA,GAAS,EACnDsB,qBACxBX,EACAM,aAAaM,QAAQ,aACjBJ,KAAKK,MAAMP,aAAaM,QAAQ,cAChCnB,GALuE,mBACtEQ,EADsE,KAC/Da,EAD+D,KAOvEC,EAAW,CACf,aACA,eACA,aACA,YACA,aACA,UACA,WACA,WAEIC,EAAa,CACjB,eACA,iBACA,eACA,cACA,eACA,YACA,aACA,aAsBF,OACE,eAAC,EAAD,CAAe3B,GAAIA,EAAIC,MAAM,eAA7B,UACE,qBAAKE,UAAU,aAAf,SACE,uBACEyB,KAAK,OACLzB,UAAU,eACVa,MAAOJ,EAAMP,KACbwB,SAAU,SAACC,GAAD,OAAOL,EAAS,CAAEV,MAAO,OAAQC,MAAOc,EAAEC,OAAOf,aAG/D,uBAAOgB,QAAQ,mBAAf,8BACA,qBAAK7B,UAAU,0BAAf,SACGuB,EAASO,KAAI,SAACC,GAAD,OACZ,qBAEE/B,UAAS,eAAU+B,EAAV,SACTC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,QAAS,SAACR,GAAD,OAAOL,EAAS,CAAEV,MAAO,UAAWC,MAAOkB,MAH/CA,QAOX,uBAAOF,QAAQ,aAAf,wBACA,qBAAK7B,UAAU,0BAAf,SACGuB,EAASO,KAAI,SAACC,EAAGK,GAAJ,OACZ,qBAEEpC,UAAS,eAAU+B,EAAV,SACTC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,QAAS,kBAAMb,EAAS,CAAEV,MAAO,YAAaC,MAAOW,EAAWY,OAH3DL,QAOX,uBAAOF,QAAQ,YAAf,uBACA,qBAAK7B,UAAU,0BAAf,SApDU,CAAC,KAAM,KAAM,KAAM,KAAM,MAqD1B8B,KAAI,SAACO,GAAD,OACT,qBAEErC,UAAS,YACTgC,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAChCC,QAAS,kBAAMb,EAAS,CAAEV,MAAO,OAAQC,MAAOwB,KAJlD,SAMGA,GALIA,QASX,uBAAOR,QAAQ,WAAf,sBACA,qBAAK7B,UAAU,0BAAf,SA/Da,CAAC,WAAY,mBAAoB,cAAe,uBAgEjD8B,KAAI,SAACQ,GAAD,OACZ,qBAEEtC,UAAU,uCACVmC,QAAS,kBAAMb,EAAS,CAAEV,MAAO,WAAYC,MAAOyB,KAHtD,SAKGA,GAJIA,QAQX,uBAAOT,QAAQ,QAAf,mBACA,qBAAK7B,UAAU,0BAAf,SAzEW,CACb,gLACA,gLACA,gLACA,gLACA,iLAqEY8B,KAAI,SAACS,GAAD,OACV,qBACEC,IAAKD,EAELE,IAAKF,EACLvC,UAAU,kBACViC,MAAM,QACNE,QAAS,kBAAMb,EAAS,CAAEV,MAAO,QAASC,MAAO0B,MAJ5CA,QAQX,qBACEvC,UAAS,yBAAoBS,EAAML,QAA1B,iBAA0CK,EAAMJ,WACzD2B,MAAO,CAAEU,SAAU,SAFrB,SAIE,sBAAK1C,UAAS,2BAAsBS,EAAMN,KAA5B,YAAoCM,EAAMH,UAAxD,UACE,mBACEN,UAAU,6BACVgC,MAAO,CAAEW,WAAY,4BAFvB,UAlFa9B,EAsFEJ,EAAMP,KArFtBW,EACE+B,OAAO/B,GAAOgC,QAAQ,UAAU,SAAUC,GAC/C,OAAOF,OAAOG,aAAaD,EAAIE,WAAW,GAAK,UAF9BnC,KAuFb,mBACEb,UAAU,6BACVgC,MAAO,CAAEW,WAAY,4BAFvB,SAIGlC,EAAMP,OAET,mBAAGF,UAAU,YAAYgC,MAAO,CAAEW,WAAY,8BAA9C,SACGlC,EAAMP,OAERO,EAAMF,MAAQ,qBAAKiC,IAAK/B,EAAMF,MAAOkC,IAAI,UAAUR,MAAM,UAAa,c,kBF7J5EtC,K,gBAAAA,E,gBAAAA,E,iCAAAA,M,KAML,IAAMsD,EAAe,CACnBC,OAAQ,oBACRC,IAAK,GACLC,SAAU,IACVC,KAAMrC,KAAKC,UACT,CACEqC,MAAO,cACPC,WAAY,YACZC,WAAY,OACZC,UAAW,OACXC,UAAW,CACT,CACEC,SAAU,aACVC,KAAM,SACNC,QAAS,SACTL,WAAY,OACZC,UAAW,OACXK,MAAO,WACPC,SAAU,UACVC,IAAK,UACLC,cAAe,KACfC,aAAc,KACdC,SAAS,UAIfC,EACA,GAEFC,IAAK,IASDC,EAAU,SAAC7D,EAAcC,GAC7B,OAAQA,EAAOe,MACb,KAAK9B,EAAa4E,OAChB,OAAO,2BAAK9D,GAAZ,kBAAoBC,EAAO8D,QAAQ5D,MAAQF,EAAO8D,QAAQ3D,QAC5D,KAAKlB,EAAa8E,OAKd,IAAIJ,EAJN,OAAK5D,EAAMyC,QAAWzC,EAAM4C,MAAS5C,EAAM0C,KAMvCkB,GADE5D,EAAM2C,SACF,IAAIsB,YAAUjE,EAAM0C,KACvBwB,iBAAiB3D,KAAKK,MAAMZ,EAAM4C,OAClCuB,WAAWnE,EAAMyC,QACjB2B,aAAapE,EAAM2C,UACnBiB,OAQE,2BAAK5D,GAAZ,IAAmB4D,UAjBnBS,MAAM,kFACCrE,GAmBX,QACE,OAAOA,IAIPsE,EACA,CACF7B,OAAQ,uBACRE,SAAU,WACV4B,OAAQ,mBACRC,SAAU,gBACVH,MAAO,wBACPxB,MAAO,qBACP4B,OAAQ,wBACRC,IAAK,mCATHJ,EAWA,CACF7B,OAAQ,mCACRE,SAAU,uCACV4B,OAAQ,sEACRC,SAAU,iCACVH,MAAO,6FACPxB,MAAO,gCACP4B,OAAQ,4DACRC,IAAK,8EAQIC,EAAoD,SAAC,GAAY,IAAVvF,EAAS,EAATA,GAAS,EACjDsB,qBAAWmD,EAASrB,GAD6B,mBACpExC,EADoE,KAC7Da,EAD6D,OAEnD+D,oBACrB,IAAIC,gBAAgBC,OAAOC,SAASC,QAAQC,IAAI,SAHwB,mBAEpEC,EAFoE,KAE9DC,EAF8D,KAK3E,OACE,eAAC,EAAD,CAAe/F,GAAIA,EAAIC,MAAM,cAA7B,UACE,sBAAKE,UAAU,YAAY6F,KAAK,QAAQC,aAAW,gBAAnD,UACE,wBACErE,KAAK,SACLU,QAAS,kBAAMyD,GAAQ,IACvB5F,UAAS,cAAS2F,EAAO,cAAgB,uBAH3C,gCAOA,wBACElE,KAAK,SACLU,QAAS,kBAAMyD,GAAQ,IACvB5F,UAAS,cAAS2F,EAAO,sBAAwB,eAHnD,wBAQF,qBAAK3F,UAAU,iBAAf,SACE,iCACE,sBAAKA,UAAU,aAAf,UACE,uBAAO6B,QAAQ,SAAf,SAAyB8D,EAAOZ,EAAK7B,OAAS6B,EAAK7B,SACnD,uBACEzB,KAAK,QACLzB,UAAU,eACV0B,SAAU,SAACC,GAAD,OACRL,EAAS,CACPG,KAAM9B,EAAa4E,OACnBC,QAAS,CAAE5D,MAAOe,EAAEC,OAAO/B,GAAIgB,MAAOc,EAAEC,OAAOf,UAGnDA,MAAOJ,EAAMyC,OACbrD,GAAG,cAGP,sBAAKG,UAAU,aAAf,UACE,uBAAO6B,QAAQ,WAAf,SAA2B8D,EAAOZ,EAAK3B,SAAW2B,EAAK3B,WACvD,uBACE3B,KAAK,QACLzB,UAAU,eACV0B,SAAU,SAACC,GAAD,OACRL,EAAS,CACPG,KAAM9B,EAAa4E,OACnBC,QAAS,CAAE5D,MAAOe,EAAEC,OAAO/B,GAAIgB,MAAOc,EAAEC,OAAOf,UAGnDA,MAAOJ,EAAM2C,SACbvD,GAAG,gBAGP,sBAAKG,UAAU,aAAf,UACE,uBAAO6B,QAAQ,SAAf,SAAyB8D,EAAOZ,EAAKC,OAASD,EAAKC,SACnD,uBACEvD,KAAK,QACLZ,MAAOJ,EAAM0C,IACbnD,UAAU,eACV0B,SAAU,SAACC,GAAD,OACRL,EAAS,CACPG,KAAM9B,EAAa4E,OACnBC,QAAS,CAAE5D,MAAOe,EAAEC,OAAO/B,GAAIgB,MAAOc,EAAEC,OAAOf,UAGnDhB,GAAG,QAEL,mBACEkG,KAAK,mEACLnE,OAAO,SACPoE,IAAI,sBAHN,SAKGL,EAAOZ,EAAKI,IAAMJ,EAAKI,SAG5B,sBAAKnF,UAAU,aAAf,UACE,uBAAO6B,QAAQ,WAAf,SAA2B8D,EAAOZ,EAAKE,SAAWF,EAAKE,WACvD,0BACEjF,UAAU,eACV0B,SAAU,SAACC,GAAD,OACRL,EAAS,CACPG,KAAM9B,EAAa4E,OACnBC,QAAS,CAAE5D,MAAOe,EAAEC,OAAO/B,GAAIgB,MAAOc,EAAEC,OAAOf,UAGnDhB,GAAG,OACHoG,KAAM,EACNpF,MAAOJ,EAAM4C,OAEf,uBAAOxD,GAAG,YAAYG,UAAU,uBAAhC,SACG2F,EAAOZ,EAAKzB,MAAQyB,EAAKzB,WAG9B,wBACE7B,KAAK,SACLU,QAAS,SAACR,GACRA,EAAEuE,iBACF5E,EAAS,CAAEG,KAAM9B,EAAa8E,UAEhCzE,UAAU,kBANZ,SAQG2F,EAAOZ,EAAKG,OAASH,EAAKG,cAIjC,sBAAKlF,UAAU,YAAf,UACE,iDACA,mBAAG+F,KAAMtF,EAAM4D,IAAKzC,OAAO,SAASoE,IAAI,sBAAxC,SACGvF,EAAM4D,aGhNJ8B,EAA4B,SAAC,GAAqB,IAAnBC,EAAkB,EAAlBA,QAASvG,EAAS,EAATA,GAOnD,OACE,cAAC,EAAD,CAAeA,GAAIA,EAAIC,MAAM,cAA7B,SACE,oBAAIE,UAAU,kCAAd,SACGoG,EAAQtE,KAAI,SAACuE,GAAD,OACX,6BACE,mBAAGN,KAAI,YAAOM,GAAd,UAXSC,EAW0BD,EAV3CC,EACGC,MAAM,KACNzE,KAAI,SAAC0E,GAAD,OAASA,EAAIC,OAAO,GAAGC,cAAgBF,EAAIG,MAAM,MACrDC,KAAK,SAMOP,GAVC,IAACC,UCQNO,MAXf,WACE,IAAMT,EAAU,CAAC,qBAAsB,qBACvC,OACE,qCACE,cAAC,EAAD,CAAMA,QAASA,EAASvG,GAAG,SAC3B,cAAC,EAAD,CAAmBA,GAAIuG,EAAQ,KAC/B,cAAC,EAAD,CAAkBvG,GAAIuG,EAAQ,SCErBU,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.15e975e9.chunk.js","sourcesContent":["import React, { useReducer, useState } from 'react';\nimport { Multipass } from 'multipass-js';\nimport { ScreenWrapper } from '../components/ScreenWrapper';\n\nenum ACTION_TYPES {\n  CHANGE = 'CHANGE',\n  SUBMIT = 'SUBMIT',\n  TOGGLE_LOADING = 'TOGGLE_LOADING'\n}\n\nconst initialState = {\n  domain: 'xxx.myshopify.com',\n  key: '',\n  redirect: '/',\n  data: JSON.stringify(\n    {\n      email: 'aaa@aaa.com',\n      tag_string: 'multipass',\n      first_name: 'TEST',\n      last_name: 'TEST',\n      addresses: [\n        {\n          address1: '123 Oak St',\n          city: 'Ottawa',\n          country: 'Canada',\n          first_name: 'TEST',\n          last_name: 'TEST',\n          phone: '555-1212',\n          province: 'Ontario',\n          zip: '123 ABC',\n          province_code: 'ON',\n          country_code: 'CA',\n          default: true\n        }\n      ]\n    },\n    undefined,\n    2\n  ),\n  url: ''\n};\n\ntype State = typeof initialState;\n\ntype Action =\n  | { type: ACTION_TYPES.CHANGE; payload: { field: string; value: string } }\n  | { type: ACTION_TYPES.SUBMIT };\n\nconst reducer = (state: State, action: Action) => {\n  switch (action.type) {\n    case ACTION_TYPES.CHANGE:\n      return { ...state, [action.payload.field]: action.payload.value };\n    case ACTION_TYPES.SUBMIT: {\n      if (!state.domain || !state.data || !state.key) {\n        alert('全項目は必須です。All fields are required.');\n        return state;\n      } else {\n        let url;\n        if (state.redirect) {\n          url = new Multipass(state.key)\n            .withCustomerData(JSON.parse(state.data))\n            .withDomain(state.domain)\n            .withRedirect(state.redirect)\n            .url();\n        } else {\n          url = new Multipass(state.key)\n            .withCustomerData(JSON.parse(state.data))\n            .withDomain(state.domain)\n            .withRedirect(state.redirect)\n            .url();\n        }\n        return { ...state, url };\n      }\n    }\n    default:\n      return state;\n  }\n};\n\nconst t = {\n  en: {\n    domain: 'Shopify Store Domain',\n    redirect: 'redirect',\n    secret: 'Multipass Secret',\n    customer: 'Customer Data',\n    alert: 'Invalid Input Content',\n    email: 'email is required.',\n    button: 'Generate Mutipass URL',\n    doc: 'Shopify multipass documentation'\n  },\n  ja: {\n    domain: 'Shopify ドメイン',\n    redirect: 'リダイレクト',\n    secret: 'マルチパス シークレット',\n    customer: '顧客データ',\n    alert: '入力項目チェックしてください。',\n    email: 'emailは必須。',\n    button: 'マルチパス用のURL生成',\n    doc: 'Shopify マルチパスドキュメント'\n  }\n};\n\ninterface ShopifyMultipassProps {\n  id: string;\n}\n\nexport const ShopifyMultipass: React.FC<ShopifyMultipassProps> = ({ id }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [isJa, setIsJa] = useState(\n    !new URLSearchParams(window.location.search).get('lang')\n  );\n  return (\n    <ScreenWrapper id={id} color=\"bg-teal-100\">\n      <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\n        <button\n          type=\"button\"\n          onClick={() => setIsJa(true)}\n          className={`btn ${isJa ? 'btn-primary' : 'btn-outline-primary'}`}\n        >\n          日本語\n        </button>\n        <button\n          type=\"button\"\n          onClick={() => setIsJa(false)}\n          className={`btn ${isJa ? 'btn-outline-warning' : 'btn-warning'}`}\n        >\n          English\n        </button>\n      </div>\n      <div className=\"container my-5\">\n        <form>\n          <div className=\"form-group\">\n            <label htmlFor=\"domain\">{isJa ? t.ja.domain : t.en.domain}</label>\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              onChange={(e) =>\n                dispatch({\n                  type: ACTION_TYPES.CHANGE,\n                  payload: { field: e.target.id, value: e.target.value }\n                })\n              }\n              value={state.domain}\n              id=\"domain\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"redirect\">{isJa ? t.ja.redirect : t.en.redirect}</label>\n            <input\n              type=\"input\"\n              className=\"form-control\"\n              onChange={(e) =>\n                dispatch({\n                  type: ACTION_TYPES.CHANGE,\n                  payload: { field: e.target.id, value: e.target.value }\n                })\n              }\n              value={state.redirect}\n              id=\"redirect\"\n            />\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"secret\">{isJa ? t.ja.secret : t.en.secret}</label>\n            <input\n              type=\"input\"\n              value={state.key}\n              className=\"form-control\"\n              onChange={(e) =>\n                dispatch({\n                  type: ACTION_TYPES.CHANGE,\n                  payload: { field: e.target.id, value: e.target.value }\n                })\n              }\n              id=\"key\"\n            />\n            <a\n              href=\"https://shopify.dev/docs/admin-api/rest/reference/plus/multipass\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              {isJa ? t.ja.doc : t.en.doc}\n            </a>\n          </div>\n          <div className=\"form-group\">\n            <label htmlFor=\"customer\">{isJa ? t.ja.customer : t.en.customer}</label>\n            <textarea\n              className=\"form-control\"\n              onChange={(e) =>\n                dispatch({\n                  type: ACTION_TYPES.CHANGE,\n                  payload: { field: e.target.id, value: e.target.value }\n                })\n              }\n              id=\"data\"\n              rows={6}\n              value={state.data}\n            ></textarea>\n            <small id=\"emailHelp\" className=\"form-text text-muted\">\n              {isJa ? t.ja.email : t.en.email}\n            </small>\n          </div>\n          <button\n            type=\"submit\"\n            onClick={(e) => {\n              e.preventDefault();\n              dispatch({ type: ACTION_TYPES.SUBMIT });\n            }}\n            className=\"btn btn-primary\"\n          >\n            {isJa ? t.ja.button : t.en.button}\n          </button>\n        </form>\n      </div>\n      <div className=\"container\">\n        <p>Muliplepass URL:</p>\n        <a href={state.url} target=\"_blank\" rel=\"noopener noreferrer\">\n          {state.url}\n        </a>\n      </div>\n    </ScreenWrapper>\n  );\n};\n","import React from 'react';\n\ninterface ScreenWrapperProps {\n  color: string;\n  id?: string;\n}\n\nexport const ScreenWrapper: React.FC<ScreenWrapperProps> = ({ id, color, children }) => {\n  return (\n    <div id={id} className={`${color} h-screen`}>\n      <div className=\"pt-20 w-1/2 mx-auto\">{children}</div>\n    </div>\n  );\n};\n","import React, { useReducer } from 'react';\nimport { ScreenWrapper } from '../components/ScreenWrapper';\n\nconst initState = {\n  text: '',\n  size: 'h1',\n  bgColor: 'bg-light',\n  fontColor: 'text-dark',\n  position: '',\n  image: ''\n};\n\ntype ActionType = { field: string; value: string };\n\nconst reduer = (state: typeof initState, action: ActionType) => {\n  const newState = { ...state, [action.field]: action.value };\n  localStorage.setItem('SHOWCASES', JSON.stringify(newState));\n  return newState;\n};\n\ninterface EmbroideryPreviewProps {\n  id: string;\n}\n\nexport const EmbroideryPreview: React.FC<EmbroideryPreviewProps> = ({ id }) => {\n  const [state, dispatch] = useReducer(\n    reduer,\n    localStorage.getItem('SHOWCASES')\n      ? JSON.parse(localStorage.getItem('SHOWCASES') as string)\n      : initState\n  );\n  const bgColors = [\n    'bg-primary',\n    'bg-secondary',\n    'bg-success',\n    'bg-danger',\n    'bg-warning',\n    'bg-info',\n    'bg-light',\n    'bg-dark'\n  ];\n  const fontColors = [\n    'text-primary',\n    'text-secondary',\n    'text-success',\n    'text-danger',\n    'text-warning',\n    'text-info',\n    'text-light',\n    'text-dark'\n  ];\n\n  const sizes = ['h1', 'h2', 'h3', 'h4', 'h5'];\n\n  const postions = ['flex-row', 'flex-row-reverse', 'flex-column', 'flex-column-reverse'];\n\n  const images = [\n    'https://lh6.googleusercontent.com/CmLF2OtWLmvHxxbpfbByAWha60zQuBta_jnYq0VN2e7VNfkoYN0RO2ua3hjFKKBfdP1-C-UdgE36OHpB2DX9bcvO_X8SUEdZVY0VTAvP0eU66RD3CN0mo6h48jsdtd2MdRM0C35euYc',\n    'https://lh4.googleusercontent.com/8Ypdpv7qkZmFeKTMneRC1y3jdvMriv-9jLVcTD5RmXwu9abJrL7j8mQPZhI9gfje8IchKonzzWRAqxq75eMFxIkDCjtopGmkFxI902Y9aPu--qnNBW1BtWSefvjnp_1MkufGQyUxWPo',\n    'https://lh6.googleusercontent.com/hu8GQaI2h69LPnOfnfwhIXteNpomSTnRA5WYVRo914EX5DjQegPPl7GnidN08TEWqWhBAohrGCdIQy7eSG5pNbio2cDSQJyycnPlYWp6avPAKwXv3-fgz_JI77gj4YsPhhAOCqdw3sQ',\n    'https://lh4.googleusercontent.com/3tc0pvYNOhkGnO7ZPt029CWjAsByEU74tRcP27-LxaWicT-L-3SugaPBCyOEdBFMcR8ki7JKvdaxx15KC2Q87skZTQEYdo3emLckS2KI6_2OL3tNvwzDe8fTM9356Y8wneeX_OtJFnw',\n    'https://lh3.googleusercontent.com/mSKDKszuD_mgkxnhUjjPVA8inNFphytqOxa98pu4Od5sA3bnPVrcTr0EOIizt5mwpwYVixnV8997utBA7SgwNJmLIYv-Yk_kMsInpIIv93mvWvD6BBPe48sKcTmssqmwTZGduRvMLEk'\n  ];\n\n  const toFullWidth = (value: string) => {\n    if (!value) return value;\n    return String(value).replace(/[!-~]/g, function (all) {\n      return String.fromCharCode(all.charCodeAt(0) + 0xfee0);\n    });\n  };\n\n  return (\n    <ScreenWrapper id={id} color=\"bg-green-200\">\n      <div className=\"form-group\">\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          value={state.text}\n          onChange={(e) => dispatch({ field: 'text', value: e.target.value })}\n        />\n      </div>\n      <label htmlFor=\"background color\">Background Color</label>\n      <div className=\"d-flex p-2 bd-highlight\">\n        {bgColors.map((c) => (\n          <div\n            key={c}\n            className={`card ${c} mx-1`}\n            style={{ width: '1rem', height: '1rem' }}\n            onClick={(e) => dispatch({ field: 'bgColor', value: c })}\n          ></div>\n        ))}\n      </div>\n      <label htmlFor=\"font color\">Font Color</label>\n      <div className=\"d-flex p-2 bd-highlight\">\n        {bgColors.map((c, index) => (\n          <div\n            key={c}\n            className={`card ${c} mx-1`}\n            style={{ width: '1rem', height: '1rem' }}\n            onClick={() => dispatch({ field: 'fontColor', value: fontColors[index] })}\n          ></div>\n        ))}\n      </div>\n      <label htmlFor=\"font size\">Font Size</label>\n      <div className=\"d-flex p-2 bd-highlight\">\n        {sizes.map((s) => (\n          <div\n            key={s}\n            className={`card mx-1`}\n            style={{ width: '2rem', height: '2rem' }}\n            onClick={() => dispatch({ field: 'size', value: s })}\n          >\n            {s}\n          </div>\n        ))}\n      </div>\n      <label htmlFor=\"position\">Position</label>\n      <div className=\"d-flex p-2 bd-highlight\">\n        {postions.map((p) => (\n          <div\n            key={p}\n            className=\"mx-1 border border-secondary rounded\"\n            onClick={() => dispatch({ field: 'position', value: p })}\n          >\n            {p}\n          </div>\n        ))}\n      </div>\n      <label htmlFor=\"image\">Image</label>\n      <div className=\"d-flex p-2 bd-highlight\">\n        {images.map((i) => (\n          <img\n            src={i}\n            key={i}\n            alt={i}\n            className=\"mx-1 rounded-sm\"\n            width=\"200px\"\n            onClick={() => dispatch({ field: 'image', value: i })}\n          />\n        ))}\n      </div>\n      <div\n        className={`container card ${state.bgColor} mb-3 ${state.fontColor}`}\n        style={{ minWidth: '40rem' }}\n      >\n        <div className={`d-flex card-body ${state.size} ${state.position}`}>\n          <p\n            className=\"card-text font-weight-bold\"\n            style={{ fontFamily: \"'Pinyon Script', cursive\" }}\n          >\n            {toFullWidth(state.text)}\n          </p>\n          <p\n            className=\"card-text font-weight-bold\"\n            style={{ fontFamily: \"'Pinyon Script', cursive\" }}\n          >\n            {state.text}\n          </p>\n          <p className=\"card-text\" style={{ fontFamily: \"'Noto Sans JP', sans-serif\" }}>\n            {state.text}\n          </p>\n          {state.image ? <img src={state.image} alt=\"penggin\" width=\"100px\" /> : null}\n        </div>\n      </div>\n    </ScreenWrapper>\n  );\n};\n","import React from 'react';\nimport { ScreenWrapper } from '../components/ScreenWrapper';\n\ninterface MenuProps {\n  screens: string[];\n  id: string;\n}\n\nexport const Menu: React.FC<MenuProps> = ({ screens, id }) => {\n  const converter = (lineString: string) =>\n    lineString\n      .split('-')\n      .map((str) => str.charAt(0).toUpperCase() + str.slice(1))\n      .join(' ');\n\n  return (\n    <ScreenWrapper id={id} color=\"bg-blue-200\">\n      <ul className=\"font-semibold text-xl list-disc\">\n        {screens.map((screen) => (\n          <li key={screen}>\n            <a href={`/#${screen}`}>{converter(screen)}</a>\n          </li>\n        ))}\n      </ul>\n    </ScreenWrapper>\n  );\n};\n","import React from 'react';\nimport './App.css';\nimport { EmbroideryPreview } from './screens/EmbroideryPreview';\nimport { ShopifyMultipass } from './screens/ShopifyMultipass';\nimport { Menu } from './screens/Menu';\n\nfunction App() {\n  const screens = ['embroidery-preview', 'shopify-multipass'];\n  return (\n    <>\n      <Menu screens={screens} id=\"menu\" />\n      <EmbroideryPreview id={screens[0]} />\n      <ShopifyMultipass id={screens[1]} />\n    </>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}